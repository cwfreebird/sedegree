<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sedegree.dao.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.sedegree.domain.UserInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="login_id" property="loginId" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="CHAR" />
  </resultMap>
  
  <resultMap id="UserProfileResultMap" type="com.sedegree.domain.UserInfo" extends="BaseResultMap">
  	<collection property="profiles" ofType="com.sedegree.domain.ProfileInfo">
	    <id column="profileId" property="id" jdbcType="BIGINT" />
	    <result column="role_type" property="roleType" jdbcType="VARCHAR" />
  	</collection>
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, login_id, password, username, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByLoginId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_info
    where login_id = #{loginId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectUserProfileByLoginId" resultMap="UserProfileResultMap" parameterType="java.lang.String" >
	SELECT 
		ui.id, ui.login_id, ui.password, ui.username, ui.state,
		pi.id profileId, pi.role_type
	FROM 
		user_info ui
	LEFT JOIN
		user_profile_info up
	ON
		ui.id = up.user_id
	LEFT JOIN
		profile_info pi
	ON
		pi.id = up.profile_id
    WHERE ui.login_id = #{loginId,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sedegree.domain.UserInfo" >
    insert into user_info (login_id, password, 
      username, state)
    values (#{id,jdbcType=BIGINT}, #{loginId,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{state,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sedegree.domain.UserInfo" >
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loginId != null" >
        login_id,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="loginId != null" >
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sedegree.domain.UserInfo" >
    update user_info
    <set >
      <if test="loginId != null" >
        login_id = #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sedegree.domain.UserInfo" >
    update user_info
    set login_id = #{loginId,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      state = #{state,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>